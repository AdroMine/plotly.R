% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/orca.R
\docType{data}
\name{orca_serve}
\alias{orca_serve}
\title{Orca image export server}
\description{
Compared to \link{orca}, \link{orca_serve} is more efficient at exporting many plotly
graphs because the former must startup/shutdown an external process for every image.
The server (background) process is launched upon initialization of a \link{orca_serve} class
(i.e., when the \code{new()} method is called). The \code{export()} method accepts any valid plotly
object as input and spits out an image file to disk. To kill the background server process,
use \code{close()}.
}
\section{Initialization}{

A new 'orcaServe'-object is initialized using the new() method on the generator:

\strong{Usage}

\code{
  orca_serve$new(
    port = 5151, mathjax = FALSE, safe = FALSE, request_limit = NULL, keep_alive = TRUE, 
    window_max_number = NULL, quiet = FALSE, debug = FALSE, ...
  )
 }

\strong{Arguments}

\describe{
\item{\code{port}}{Sets the server's port number.}
\item{\code{mathjax}}{
whether or not to include MathJax (required to render \link{TeX}).
If \code{TRUE}, the PLOTLY_MATHJAX_PATH environment variable must be set and point
to the location of MathJax (this variable is also used to render \link{TeX} in
interactive graphs, see \link{config}).
}
\item{\code{safe}}{
Turns on safe mode: where figures likely to make browser window hang during image generating are skipped.
}
\item{\code{request_limit}}{
Sets a request limit that makes orca exit when reached.
}
\item{\code{keep_alive}}{
Turn on keep alive mode where orca will (try to) relaunch server if process unexpectedly exits.
}
\item{\code{window_max_number}}{
Sets maximum number of browser windows the server can keep open at a given time.
}
\item{\code{quiet}}{Suppress all logging info.}
\item{\code{debug}}{Starts app in debug mode.}
}
}

\section{Methods}{


\describe{
\item{\code{export(p, file = "plot.png", format = tools::file_ext(file), scale = NULL, width = NULL, height = NULL)}}{
Export a static image of a plotly graph. Arguments found here are the same as those found in \link{orca}.
}
\item{\code{close()}}{Close down the orca server and kill the underlying node process.}
}
}

\section{Fields}{


\describe{
\item{\code{port}}{The port number that the server is listening to.}
\item{\code{process}}{An R6 class for controlling and querying the underlying node process.}
}
}

\examples{

\dontrun{
# launch the server
server <- orca_serve$new()

# export as many graphs as you'd like
server$export(qplot(1:10), "test1.pdf")
server$export(plot_ly(x = 1:10, y = 1:10), "test2.pdf")

# the underlying process is exposed as a field, so you
# have full control over the external process
server$process$is_alive()

# convenience method for closing down the server
server$close()

# remove the exported files from disk
unlink("test1.pdf")
unlink("test2.pdf")
}
}
\seealso{
\link{orca}
}
\author{
Carson Sievert
}
\keyword{datasets}
